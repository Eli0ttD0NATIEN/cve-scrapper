const { default: axios } = require('axios');
const fs = require('fs');
const {JSDOM} = require('jsdom');
const AXIOS = require('axios');

class VulnCVE{
    constructor(CVE_URL, products, last){
        this.CVE_URL = CVE_URL;
        this.products = products;
        this.last = last;
    }

    requestVuln = async (keyword) => {
        let resp = await axios.get(CVE_URL + keyword);
        return resp.data;
    }
    
    scrapVuln = (resp) => {
        const document = new JSDOM(resp).window.document;
        const vulnTable = document.getElementById("TableWithRules").textContent;
        return vulnTable;
    }
    
    getVuln = async (products) => {
        let allVuln = []
            for(i in products){
                let prod = products[i];
                let resp = await requestVuln(prod);
                let vulnTable = scrapVuln(resp).split('\n');
                vulnTable = vulnTable.filter(function(entry) { return entry.trim() != ''; });
                vulnTable = vulnTable.map(elem => elem.trim());
                vulnTable.splice(0,2);
                let vulnerabilityDict = {}
                for(let i = 0; i < vulnTable.length; i+=2){
                    vulnerabilityDict[vulnTable[i]] = vulnTable[i+1];
                }
                allVuln.push(JSON.stringify(vulnerabilityDict, null, 4));
            }
        return allVuln;
    }
}
 

